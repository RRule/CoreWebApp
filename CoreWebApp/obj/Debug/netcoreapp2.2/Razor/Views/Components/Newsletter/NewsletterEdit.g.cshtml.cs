#pragma checksum "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1b8865c65c21095eeef1685ac22e4eb510b3be86"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Components_Newsletter_NewsletterEdit), @"mvc.1.0.view", @"/Views/Components/Newsletter/NewsletterEdit.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Components/Newsletter/NewsletterEdit.cshtml", typeof(AspNetCore.Views_Components_Newsletter_NewsletterEdit))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\_ViewImports.cshtml"
using CoreWebApp;

#line default
#line hidden
#line 2 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\_ViewImports.cshtml"
using CoreWebApp.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1b8865c65c21095eeef1685ac22e4eb510b3be86", @"/Views/Components/Newsletter/NewsletterEdit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce38d043670142d3eeab9e7775e3d99906b8a926", @"/Views/_ViewImports.cshtml")]
    public class Views_Components_Newsletter_NewsletterEdit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Habufa_Extranet.Data.Newsletter>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(160, 3658, true);
            WriteLiteral(@"

<template id=""NewsletterCreate"">
    <v-form>
        <v-container>

            <h1>{{header}}</h1>
            <v-dialog v-model=""loader""
                      hide-overlay
                      persistent
                      width=""300"">
                <v-card color=""primary""
                        dark>
                    <v-card-text>
                        Saving
                        <v-progress-linear indeterminate
                                           color=""white""
                                           class=""mb-0""></v-progress-linear>
                    </v-card-text>
                </v-card>
            </v-dialog>


            <v-layout row wrap>
                <v-flex xs12 sm12 md12>
                    <v-text-field label=""Titel"" v-model=""newsletter.Title"">
                    </v-text-field>
                </v-flex>
            </v-layout>

            <v-layout row wrap>
                <v-flex xs12 sm6 md6>
                    <v-text-f");
            WriteLiteral(@"ield label=""Weeknummer"" mask=""####-##"" v-model=""newsletter.Week"">
                    </v-text-field>
                </v-flex>
                <v-flex xs12 sm6 md6>
                    <v-select :items=""['Draft','Online']""
                              v-model=""newsletter.Status""
                              label=""Status""></v-select>
                </v-flex>
            </v-layout>

            <v-layout row wrap>
                <v-flex xs12 sm6 md6>
                    <v-text-field label=""Web rol"" v-model=""newsletter.Role"">
                    </v-text-field>
                </v-flex>
                <v-flex xs12 sm6 md6>
                    <v-text-field label=""Datum laatst verzonden"" v-model=""newsletter.DateSent"">
                    </v-text-field>
                </v-flex>
            </v-layout>

            <v-layout row>

                <v-flex xs6 sm6 md6>
                    <v-select :items=""['NL']""
                              v-model=""newsletter.Country""
        ");
            WriteLiteral(@"                      label=""Land""></v-select>
                </v-flex>
                <v-flex xs6 sm6 md6>

                    <v-select :items=""['NL','DE','FR','EN']""
                              v-model=""newsletter.Language""
                              label=""Taal""></v-select>
                </v-flex>
                <v-flex xs6 sm6 md6>

                    <v-select :items=""['H&H','Xooon','CocoMaison','H@H','Habufa']""
                              v-model=""newsletter.Concept""
                              label=""Concept""></v-select>
                </v-flex>
            </v-layout>

            <v-layout row wrap>
                <v-flex xs12 sm12 md12>
                    <tinymce-editor v-model=""newsletter.Content""></tinymce-editor>
                </v-flex>
            </v-layout>
            <v-layout row wrap>
                <v-flex left>
                    <v-btn dark color=""deep-orange darken-3"">Delete</v-btn>
                </v-flex>
                <v-flex righ");
            WriteLiteral(@"t>
                    <v-btn color=""danger"">Preview</v-btn>
                    <v-btn color=""danger"">Send</v-btn>
                    <v-btn color=""green accent-1"" :disabled=""!formIsValid"" v-on:click=""save()"">Save</v-btn>

                </v-flex>
            </v-layout>
        </v-container>
    </v-form>
</template>

<script>
    var newsletterCreate = Vue.component('newsletter-create',
        {
            template: '#NewsletterCreate',
            data: function () {
                return {
                    newsletter: {
                        Id: ");
            EndContext();
            BeginContext(3819, 8, false);
#line 105 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                       Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(3827, 37, true);
            WriteLiteral(",\r\n                        Concept: \'");
            EndContext();
            BeginContext(3865, 23, false);
#line 106 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                             Write(Html.Raw(Model.Concept));

#line default
#line hidden
            EndContext();
            BeginContext(3888, 38, true);
            WriteLiteral("\',\r\n                        Country: \'");
            EndContext();
            BeginContext(3927, 13, false);
#line 107 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                             Write(Model.Country);

#line default
#line hidden
            EndContext();
            BeginContext(3940, 39, true);
            WriteLiteral("\',\r\n                        Language: \'");
            EndContext();
            BeginContext(3980, 14, false);
#line 108 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                              Write(Model.Language);

#line default
#line hidden
            EndContext();
            BeginContext(3994, 37, true);
            WriteLiteral("\',\r\n                        Status: \'");
            EndContext();
            BeginContext(4032, 11, false);
#line 109 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                            Write(Model.State);

#line default
#line hidden
            EndContext();
            BeginContext(4043, 36, true);
            WriteLiteral("\',\r\n                        Title: \'");
            EndContext();
            BeginContext(4080, 21, false);
#line 110 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                           Write(Html.Raw(Model.Title));

#line default
#line hidden
            EndContext();
            BeginContext(4101, 35, true);
            WriteLiteral("\',\r\n                        Week: \'");
            EndContext();
            BeginContext(4137, 16, false);
#line 111 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                          Write(Model.WeekNumber);

#line default
#line hidden
            EndContext();
            BeginContext(4153, 39, true);
            WriteLiteral("\',\r\n                        DateSent: \'");
            EndContext();
            BeginContext(4193, 18, false);
#line 112 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                              Write(Model.LastSentDate);

#line default
#line hidden
            EndContext();
            BeginContext(4211, 35, true);
            WriteLiteral("\',\r\n                        Role: \'");
            EndContext();
            BeginContext(4247, 10, false);
#line 113 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                          Write(Model.Role);

#line default
#line hidden
            EndContext();
            BeginContext(4257, 38, true);
            WriteLiteral("\',\r\n                        Content: \"");
            EndContext();
            BeginContext(4296, 23, false);
#line 114 "C:\Development_local\CoreWebApp\CoreWebApp\CoreWebApp\Views\Components\Newsletter\NewsletterEdit.cshtml"
                             Write(Html.Raw(Model.Content));

#line default
#line hidden
            EndContext();
            BeginContext(4319, 2561, true);
            WriteLiteral(@"""
                    },
                    loader: false
                }
            },
            computed: {
                formIsValid: function () {
                    return (
                        this.newsletter.Week &&
                        this.newsletter.Content &&
                        this.newsletter.Language &&
                        this.newsletter.Country &&
                        this.newsletter.Concept &&
                        this.newsletter.Title);
                },
                header: function(){
                    if (this.newsletter.Id == 0) {
                        return ""Create a newsletter"";
                    }
                    return ""Edit a newsletter"";
                }
            },
            mounted: function () {
            },
            methods: {
                save: function () {
                    this.saveNewsletter(this.newsletter);
                },
                saveNewsletter: function (anewsletter) {
");
            WriteLiteral(@"                    var self = this;
                    api({
                        method: 'post',
                        url: '/Newsletter/OnSaveNewsletter',
                        data: {
                            Id: anewsletter.Id,
                            LastUpdated: '',
                            Concept: anewsletter.Concept,
                            Country: anewsletter.Country,
                            Language: anewsletter.Language,
                            State: anewsletter.Status,
                            Title: anewsletter.Title,
                            WeekNumber: anewsletter.Week,
                            LastSentDate: anewsletter.DateSent,
                            Role: anewsletter.Role,
                            Content: anewsletter.Content
                        }
                    })
                        .then(function (response) {
                            if (response) {
                                console.log(""success"",");
            WriteLiteral(@"response);
                                self.newsletter.Id = response.data;
                                app.showSnackbar('success', 'Saved succesfully!');
                                window.location.href = ""/Newsletter/Edit/"" + self.newsletter.Id;

                            }
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }

            }
        });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Habufa_Extranet.Data.Newsletter> Html { get; private set; }
    }
}
#pragma warning restore 1591
